一、xpath介绍

XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中通过元素和属性进行导航。
1、

XPath 使用路径表达式在 XML 文档中进行导航
2、
XPath 包含一个标准函数库
3、
XPath 是 XSLT 中的主要元素
4、
XPath 是一个 W3C 标准

XPath 中有七种类型的节点：
元素、属性、文本、命名空间、处理指令、注释以及文档（根）节点。XML 文档是被作为节点树来对待的。

二、xpath语法
1、表达式
nodename -- 选取此节点的所有子节点
/ -- 从根节点选取
// -- 从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置
. -- 选取当前节点
.. --选取当前节点的父节点
@ -- 选取属性


2、路径表达式（举例说明）--谓语
<?xml version="1.0" encoding="ISO-8859-1"?>
<bookstore>
<book>
  <title lang="eng">Harry Potter</title>
  <price>29.99</price>
</book>
<book>
  <title lang="eng">Learning XML</title>
  <price>39.95</price>
</book>
</bookstore>

/bookstore/book[1] -- 选取属于bookstore子元素的第一个book元素
/bookstore/book[last()] -- 选取属于bookstore子元素的最后一个book元素
/bookstore/book[last()-1] -- 选取属于bookstore子元素的倒数第二个book元素
/bookstore/book[position()<3] -- 选取属于bookstore子元素的前2个book元素
//title[@lang] -- 选取所有拥有名为lang属性的title元素
//title[@lang='eng'] -- 选取lang属性的值为eng的所有title元素
/bookstore/book[price>35.00] -- 选取bookstore中book元素的price值大于35.00的所有book元素
/bookstore/book[price>35.00]/title -- 选取bookstore中book元素price值大于35.00下的所有title元素


3、通配符
* -- 匹配任何元素节点
@* -- 匹配任何属性节点
node() -- 匹配任何类型的节点
| -- 并列符，可选取多个节点
例：
/bookstore/* -- 选取bookstore元素的所有元素
//* -- 选取文档中的所有元素
//title[@*] -- 选取所有带有属性的title元素
//title | //price -- 选取文档中的所有带title和price的元素
//book/title | //book/price -- 选取book元素的所有title和price元素
//bookstore/book/title | //price -- 选取bookstore元素book元素的所有title元素和文档中所有的price元素

三、轴：可定义相对与于当前节点的节点集
ancestor -- 选取当前节点的所有先辈（父、祖父等）
ancestor-or-self -- 选取当前节点的所有先辈（父、祖父等）以及当前节点本身
attribute -- 选取当前节点的所有属性
child -- 选取当前节点的所有子元素
descendant -- 选取当前节点的所有后代元素（子、孙等）
descendant-or-self -- 选取当前节点的所有后代元素（子、孙等）以及当前节点本身
following -- 选取文档中当前节点的结束标签之后的所有节点
namespace -- 选取当前节点的所有命名空间节点
parent -- 选取当前节点的父节点
preceding -- 选取文档中当前节点的开始标签之前的所有节点
preceding-sibling -- 选取当前节点之前的所有同级节点
self -- 选取当前节点

语法：
轴名称::节点测试[谓语]
例：
child::book -- 选取所有属于当前节点的子元素的 book 节点
attribute::lang -- 选取当前节点的 lang 属性
child::* -- 选取当前节点的所有子元素
attribute::* -- 选取当前节点的所有属性
child::text() -- 选取当前节点的所有文本子节点
child::node() -- 选取当前节点的所有子节点

descendant::book -- 选取当前节点的所有 book 后代

ancestor::book -- 选择当前节点的所有 book 先辈

ancestor-or-self::book -- 选取当前节点的所有 book 先辈以及当前节点（如果此节点是 book 节点）

child::*/child::price -- 选取当前节点的所有 price 孙节点

四、函数
1、starts-with：获取以xxx开头的元素
例：xpath('//div[starts-with(@class,"test")]')

2、contains：获取包含xxx的元素
例：xpath('//div[contains(@id,"test")]')

3、and：与的关系
例：xpath('//div[contains(@id,"test") and contains(@id,"title")]')

4、text()：文本信息
例：xpath('//div[contains(text(),"test")]')
    xpath('//div[text()="test"]')










